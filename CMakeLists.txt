cmake_minimum_required (VERSION 3.0)
project (SerenityOS)

if (NOT DEFINED ENV{SERENITY_ROOT})
    message(FATAL_ERROR "SERENITY_ROOT not set. Please source Toolchain/UseIt.sh.")
endif()

function(serenity_lib target_name fs_name)
    file(GLOB headers "*.h")
    foreach(header ${headers})
        install(FILES ${header} DESTINATION usr/include/${target_name})
    endforeach()
    add_library(${target_name} ${SOURCES})
    install(TARGETS ${target_name} ARCHIVE DESTINATION lib)
    set_target_properties(${target_name} PROPERTIES OUTPUT_NAME ${fs_name})
endfunction()

function(serenity_libc target_name fs_name)
    file(GLOB headers "*.h")
    foreach(header ${headers})
        install(FILES ${header} DESTINATION usr/include)
    endforeach()
    add_library(${target_name} ${SOURCES})
    install(TARGETS ${target_name} ARCHIVE DESTINATION lib)
    set_target_properties(${target_name} PROPERTIES OUTPUT_NAME ${fs_name})
endfunction()

function(serenity_app target_name)
    add_executable(${target_name} ${SOURCES})
    install(TARGETS ${target_name} RUNTIME DESTINATION bin)
endfunction()

find_program(CCACHE_PROGRAM ccache)
if(CCACHE_PROGRAM)
    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
endif()

unset(CMAKE_SYSROOT)
set(CMAKE_STAGING_PREFIX $ENV{SERENITY_ROOT}/Root)
set(CMAKE_INSTALL_PREFIX $ENV{SERENITY_ROOT}/Root)
set(CMAKE_INSTALL_DATAROOTDIR $ENV{SERENITY_ROOT}/Root/res)

#set(CMAKE_C_COMPILER i686-pc-serenity-gcc)
#set(CMAKE_CXX_COMPILER i686-pc-serenity-g++)

set(SERENITY_ROOT $ENV{SERENITY_ROOT})

#FIXME: -fstack-protector

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Os -Wall -Wextra -Werror -std=c++17 -Wno-sized-deallocation -fno-sized-deallocation -fno-exceptions -fno-rtti -Wno-address-of-packed-member -Wundef -Wcast-qual -Wwrite-strings -Wimplicit-fallthrough -Wno-nonnull-compare -Wno-deprecated-copy")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG -DSANITIZE_PTRS")

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wconsumed")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-expansion-to-defined")
endif()

add_subdirectory(Meta/Lagom)
add_subdirectory(DevTools/IPCCompiler)
add_subdirectory(DevTools/FormCompiler)

add_subdirectory(Libraries/LibC)
add_subdirectory(Libraries/LibM)
add_subdirectory(Libraries/LibPthread)
add_subdirectory(Libraries/LibCore)
add_subdirectory(Libraries/LibIPC)
add_subdirectory(Libraries/LibDraw)
add_subdirectory(Libraries/LibThread)
add_subdirectory(Libraries/LibGUI)
add_subdirectory(Libraries/LibAudio)
add_subdirectory(Libraries/LibProtocol)
add_subdirectory(Libraries/LibHTML)
add_subdirectory(Libraries/LibMarkdown)
add_subdirectory(Libraries/LibPCIDB)
add_subdirectory(Libraries/LibVT)

add_subdirectory(Servers/WindowServer)
add_subdirectory(Servers/AudioServer)
add_subdirectory(Servers/ProtocolServer)
add_subdirectory(Servers/LookupServer)
add_subdirectory(Servers/SystemServer)
add_subdirectory(Servers/TTYServer)
add_subdirectory(Servers/TelnetServer)

add_subdirectory(Applications/About)
add_subdirectory(Applications/Browser)
add_subdirectory(Applications/Calculator)
add_subdirectory(Applications/ChanViewer)
add_subdirectory(Applications/DisplayProperties)
add_subdirectory(Applications/FileManager)
add_subdirectory(Applications/FontEditor)
add_subdirectory(Applications/Help)
add_subdirectory(Applications/HexEditor)
add_subdirectory(Applications/IRCClient)
add_subdirectory(Applications/PaintBrush)
add_subdirectory(Applications/Piano)
add_subdirectory(Applications/QuickShow)
add_subdirectory(Applications/SoundPlayer)
add_subdirectory(Applications/SystemDialog)
add_subdirectory(Applications/SystemMonitor)
add_subdirectory(Applications/Taskbar)
add_subdirectory(Applications/Terminal)
add_subdirectory(Applications/TextEditor)

add_subdirectory(Games/Minesweeper)
add_subdirectory(Games/Snake)

add_subdirectory(DevTools/HackStudio)
add_subdirectory(DevTools/VisualBuilder)
add_subdirectory(DevTools/Inspector)
add_subdirectory(DevTools/ProfileViewer)

add_subdirectory(MenuApplets/Audio)
add_subdirectory(MenuApplets/Clock)
add_subdirectory(MenuApplets/CPUGraph)

add_subdirectory(Shell)

add_subdirectory(Demos/Fire)
add_subdirectory(Demos/HelloWorld)
add_subdirectory(Demos/WidgetGallery)

add_subdirectory(Userland)
